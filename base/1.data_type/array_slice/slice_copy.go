package a_s

import "fmt"

/*
有时候我们想把某个切片的值复制给另外一个切片，
直接使用 := 会有一些问题
*/
func assignSl() {
	a := []int{1, 2, 3}
	b := a
	fmt.Printf("[直接通过 := 赋值]\na的底层数组地址：%p|a切片自身地址：%p\nb的底层数组地址：%p|b切片自身地址：%p\n",
		a, &a, b, &b)
}

/*
可以看到，直接通过 := 的方式赋值，a、b切片指向的底层数组是相同的
修改a的值也会影响b
解决这个问题的方法是使用copy函数
*/
func copySl() {
	a := []int{1, 2, 3}
	b := make([]int, 3)
	copy(b, a)
	fmt.Printf("[通过 copy 赋值]\na的底层数组地址：%p|a切片自身地址：%p\nb的底层数组地址：%p|b切片自身地址：%p\n",
		a, &a, b, &b)
}

/*
可以发现，通过copy赋值的切片，底层数组不相同，修改其中一个并不会影响另外一个
*/
