package main

/*
	日志通常分为几个不同级别，用于区分日志的严重程度或者重要性
	Error（错误）：表示程序遇到了无法继续执行的错误或异常，需要及时处理。比如，文件读取失败，数据库连接断开等等。此类日志应该尽可能详细地记录错误信息，以便快速定位问题并解决。
	Warn（警告）：表示程序遇到了一些不太正常的情况，但是并不会影响程序的正常执行，可以继续运行。比如，磁盘空间不足，配置文件中某些参数缺失等等。此类日志应该记录一些有用的提示信息，但是不必过于详细，以避免日志过于臃肿。
	Info（信息）：表示程序执行过程中的一些重要事件或者状态变化。比如，服务器启动成功，接收到了一个请求，某个任务完成等等。此类日志应该记录一些重要的状态信息，方便后续的分析和统计。
	Debug（调试）：表示程序执行过程中的详细信息，一般用于程序的调试和排查问题。此类日志记录的信息应该非常详细，包括函数调用堆栈、变量值等等。在生产环境中应该尽量避免使用此类日志，以避免影响性能。
	Trace（跟踪）：是最详细的日志级别，用于跟踪程序的执行过程。此类日志记录的信息应该非常详细，包括函数的进入和离开，函数参数和返回值等等。在生产环境中应该尽量避免使用此类日志，以避免影响性能。

	不同的日志级别在不同的场景下有着不同的用途。
	一般来说，在生产环境中应该尽可能使用 Error、Warn 和 Info 这些级别，而在开发和测试阶段可以适当使用 Debug 和 Trace 这些级别来帮助调试和定位问题。
*/
func main() {
	/*
		log.Error("这个错误很严重，程序阻断了，要记监控，发到报警")
		log.Warn("这个错误不应该出来啊，程序可以继续往下走，但是太没面子了")
		log.Info("没啥事儿，就是想打个日志")
		log.Debug("作为一个经常写bug的程序员，开发联调阶段，多打点日志很合理-查错用")
		log.Trace("从来没用过，他们说是为了追踪-优化用")
	*/

}
